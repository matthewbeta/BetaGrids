/*  =============================================

//	$ 	MEDIA QUERIES MIXIN
//	---------------------------------------------
//	* 	EASILY ADD MEDIA QUERIES 
//	* 	version of http://css-tricks.com/naming-media-queries
//	* 	by @chriscoyier
//
//	==============================================  */

	@mixin mq($bp) {

		@if $bp == s {
			@media only screen and (min-width: $bp-s) and (max-width: $bp-m - 0.0625){ 		
				@content; 
			}
		}
		@else if $bp == m {
			@media only screen and (min-width: $bp-m) and (max-width: $bp-w - 0.0625){ 		
				@content; 
			}
		}
		@else if $bp == w {
			@media only screen and (min-width: $bp-w) and (max-width: $bp-xw - 0.0625){ 			
				@content; 
			}
		}
		@else if $bp == xw {
			@media only screen and (min-width: $bp-xw) { 	
				@content; 
			}
		}

	}

	/*  =============================================

	$ 	GRID MODULE
	---------------------------------------------
	* 	SET UP THE GRID AND THE GRID UNITS

	==============================================  */
	%clr {
	    &:before,
	    &:after {
	        content: " ";
	        display: table;
	    }
	    &:after {
	        clear: both;
	    }
	}

	.grid {
		position: relative;
		float: left;
	 	width: 100 + $grid-gutter;
	  	margin-left: $grid-gutter * -1;
	  	@extend %clr;
	}
	.grid__unit {
	  	float: left;
	  	display: block;
	  	width: 100% / (100 + $grid-gutter) * 100%;
	  	margin-left: $grid-gutter;
	}

/*  =============================================

//	$ 	GRID CALCULATOR
//	---------------------------------------------
//	* 	FOR CALCULATING EQUAL COLUMN SIZES
//	* 	@MATTHEWBETA
//
//	==============================================  */

	@mixin cols($size, $number) {
		
		@if type-of($number) == number {

			// removes % 
			$gutter: $grid-gutter / ($grid-gutter * 0 + 1); 

	  		width: 100% / ($size / $number) - $gutter ;

		} @else {

			@warn "Not a number value: #{$number}";
		}
	}

	// OFFSET - PUSHES COL TO RIGHT BY COL WIDTH(S)
	@mixin offset($size, $number) {

		@if type-of($number) == number {

			// removes % 
			$gutter: $grid-gutter / ($grid-gutter * 0 + 1); 

	 		margin-left: 100% / ($size / $number) + $gutter ;

		} @else {

			@warn "Not a number value: #{$number}";
		}
	}


	/* =============================================

	  > SMALL

	==============================================*/

	@for $i from 1 through ($grid-units-sml - 1){

		@if $ghost-grids {

		    %s-#{$i}-#{$grid-units-sml} {
		        @include cols($grid-units-sml, $i);
		    }
	    	
		} 
		@else {

		    .s-#{$i}-#{$grid-units-sml} {
	        	@include cols($grid-units-sml, $i);
	    	}
			
		}


	}

	/* =============================================

	  > OFFSET SML

	==============================================*/
	
	@for $i from 1 through ($grid-units-sml - 1){

		@if $ghost-grids {

		    %s-push-#{$i}-#{$grid-units-sml} {
		        @include offset($grid-units-sml, $i)
			}
		
		}

		@else {

			.s-push-#{$i}-#{$grid-units-sml} {
		        @include offset($grid-units-sml, $i)
			}
			
		}
	}

	/* =============================================

	  > MED

	==============================================*/
	
	@include mq(m) {

		@for $i from 1 through ($grid-units-med - 1){

			@if $ghost-grids { 

			    %m-#{$i}-#{$grid-units-med} {
			        @include cols($grid-units-med, $i);
			    }

			}
			@else {

			    .m-#{$i}-#{$grid-units-med} {
			        @include cols($grid-units-med, $i);
			    }
				
			}
		}

	/* =============================================

	  > OFFSET MED

	==============================================*/
		
		@for $i from 1 through ($grid-units-med - 1){

			@if $ghost-grids {  			
		    
			    %m-push-#{$i}-#{$grid-units-med} {
			        @include offset($grid-units-med, $i)
				}

			}
			@else {

				.m-push-#{$i}-#{$grid-units-med} {
			        @include offset($grid-units-med, $i)
				}
				
			}
		}
	
	}
	// MQ ENDS

	/* =============================================

	  > WIDE

	==============================================*/

	@include mq(w) { 

		@for $i from 1 through ($grid-units-wide - 1){
			 
			 @if $ghost-grids { 

			    %w-#{$i}-#{$grid-units-wide} {
			        @include cols($grid-units-wide, $i);
			    }
			}
			@else {
				
			    .w-#{$i}-#{$grid-units-wide} {
			        @include cols($grid-units-wide, $i);
			    }

			}

		}

	/* =============================================

	  > OFFSET WIDE

	==============================================*/
		
		@for $i from 1 through ($grid-units-wide - 1){
		    @if $ghost-grids {  			
		    
			    %w-push-#{$i}-#{$grid-units-wide} {
			        @include offset($grid-units-wide, $i)
				}

			}
			@else {

				.w-push-#{$i}-#{$grid-units-wide} {
			        @include offset($grid-units-wide, $i)
				}
				
			}
		}

	}
